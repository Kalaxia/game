imports:
    - { resource: ../src/Modules/Ares/Resource/config/config.yml }
    - { resource: ../src/Modules/Artemis/Resource/config/config.yml }
    - { resource: ../src/Modules/Athena/Resource/config/config.yml }
    - { resource: ../src/Modules/Atlas/Resource/config/config.yml }
    - { resource: ../src/Modules/Demeter/Resource/config/config.yml }
    - { resource: ../src/Modules/Galaxy/Resource/config/config.yml }
    - { resource: ../src/Modules/Hephaistos/Resource/config/config.yml }
    - { resource: ../src/Modules/Hermes/Resource/config/config.yml }
    - { resource: ../src/Modules/Promethee/Resource/config/config.yml }
    - { resource: ../src/Modules/Zeus/Resource/config/config.yml }

parameters:
    session_lifetime: 1800
    log_directory: var/logs
    log_rotation: 3
    daily_script_hour: 3
    galaxy.galaxy_configuration.class: App\Modules\Galaxy\Galaxy\GalaxyConfigurationV6
    game.available_factions: [1, 2, 3, 4, 7]

    apimode: 'disabled'

    server_id: 0
    server_start_time: '%env(SERVER_START_TIME)%'
    server_segment_shift: '%env(SERVER_SEGMENT_SHIFT)%'
    server_time_mode: '%env(enum:App\\Modules\\Shared\\Domain\\Server\\TimeMode:SERVER_TIME_MODE)%'

    security_api_key: '%env(SECURITY_API_KEY)%'

    redis_timeout: '%env(REDIS_TIMEOUT)%'

    facebook_link: 'https://www.facebook.com/asylamba'
    google_plus_link: 'https://plus.google.com/+Asylamba-game'
    twitter_link: 'https://twitter.com/asylamba'

    # asm constantes
    asm_umode: true

    # event constantes
    event_base: 0 # correspond à une construction (batiment ou vaisseau) dans une base
    event_outgoing_attack: 1
    event_incoming_attack: 2

    # constante de temps pour la mise à jour des événements dans loadEvent.php
    # 300 s = 5 minutes
    time_event_update: 300

    # pour Game::antiSpyRadius()
    antispy_display_mode: 0
    antispy_game_mode: 1

    game.ship_cost_reduction: 0.8

    pam_coeftax: 1
    rsm_researchquantity: 10

    # durée en heures avant que le classement total démarre
    # 2 semaines = 336 h
    # 20 jours = 480h
    hours_before_start_of_ranking: 480
    points_to_win: 2000

    media: '/media/'
    # active les APIs de confirmation
    # active la création de personnage au niveau 5
    highmode: '%env(bool:HIGH_LEVEL_MODE)%'
    # MISCELLANEOUS #
    #################
    # définition des ids des différants joueurs systèmes
    id_galaxy: 1
    id_jeanmi: 2
    shift_faction: 2
    # date de début du serveur
    messenger_logs: '%env(default::MESSENGER_LOGS)%'
    sentry_dsn: '%env(default::SENTRY_DSN)%'
    database_host: '%env(DATABASE_HOST)%'
    database_name: '%env(DATABASE_NAME)%'
    database_user: '%env(DATABASE_USER)%'
    database_password: '%env(DATABASE_PASSWORD)%'
    database_admin_user: '%env(DATABASE_ADMIN_USER)%'
    database_admin_password: '%env(DATABASE_PASSWORD)%'

    env(MESSENGER_TRANSPORT_DSN): '%env(RABBITMQ_DSN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Kernel.php'
            - '../src/action/'
            - '../src/api/'
            - '../src/buffer/'
            - '../src/connection/'
            - '../src/event/'
            - '../src/inscription/'
            - '../src/script/'
            - '../src/views/'
            - '../src/Modules/'

    App\Modules\Portal\:
        resource: '../src/Modules/Portal/'
        exclude:
            - '../src/Modules/Shared/Domain/{!Service}'

    App\Modules\Shared\:
        resource: '../src/Modules/Shared/'
        exclude:
            - '../src/Modules/Shared/Application/PercentageApplier'
            - '../src/Modules/Shared/Domain/{!Service}'

    Symfony\Component\Dotenv\Command\DotenvDumpCommand: ~

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Shared\Infrastructure\Controller\:
        resource: '../src/Shared/Infrastructure/Controller/'
        tags: ['controller.service_arguments']

    App\Modules\Portal\Infrastructure\Controller\:
        resource: '../src/Modules/Portal/Infrastructure/Controller/'
        tags: ['controller.service_arguments']

    App\Classes\Library\Parser:
        arguments:
            $mediaPath: '%media%'

    App\Classes\Redis\RedisManager:
        arguments:
            $host: '%env(REDIS_HOST)%'
            $port: '%env(int:REDIS_PORT)%'
            $password: '%env(default::REDIS_PASSWORD)%'
            $timeout: "%redis_timeout%"

    App\Shared\Infrastructure\EventListener\MixpanelListener:
        arguments:
            $environment: '%kernel.environment%'

    App\Modules\Travel\Domain\Service\CalculateTravelTime:

    App\Modules\Travel\Domain\Service\GetTravelDuration:
